---
import { getCollection } from "astro:content";
import Pagination from "@components/blog/pagination.astro";
import Posts from "@components/blog/posts.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Layout from "@layouts/Layout.astro";
import { t, getCurrentLanguage } from "@utils/i18n";

export async function getStaticPaths({ paginate }) {
	// Hardcode the language for this specific file (EN blog page - default)
	const currentLang = "en";
	
	var posts = await getCollection("blog", ({ data }) => {
		return !data.draft;
	});
	
	// Preprocess the posts to split the slugs and get the languages
	var processedPosts = posts.map((post) => {
		const [...slug] = post.slug.split("/");
		let lang = "en"; // Default language
		var firstSlug = post.slug.match(/^([^\/]*)\//);
		if (firstSlug) {
			lang = firstSlug[1];
		}
		return {
			...post,
			slug: slug.join("/"),
			lang: lang,
		};
	});
	
	// Filter posts based on the current language (EN)
	const localizedPosts = processedPosts.filter(
		(post) => post.lang === currentLang,
	);
	
	localizedPosts.sort(
		(a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
	);
	
	return paginate(localizedPosts, {
		params: { blog: "blog" || undefined },
		pageSize: 4,
	});
}

const { page } = Astro.props;

// Get current language from URL for component rendering
const currentLang = getCurrentLanguage(Astro.url);
---

<Layout title={t("mics.blog", currentLang)}>
	<Container>
		<Sectionhead>
			<Fragment slot="title">{t("mics.blog_h1", currentLang)}</Fragment>
            <Fragment slot="desc">{t("mics.blog_desc", currentLang)}</Fragment>
		</Sectionhead>
		<Posts posts={page.data} />
		<Pagination class="mt-20" prevUrl={page.url.prev} nextUrl={page.url.next} />
	</Container>
</Layout>