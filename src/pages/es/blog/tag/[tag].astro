---
import { getCollection } from "astro:content";
import Pagination from "@components/blog/pagination.astro";
import Posts from "@components/blog/posts.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Layout from "@layouts/Layout.astro";
import { t, getCurrentLanguage } from "@utils/i18n";

export async function getStaticPaths() {
	// Hardcode language for main file
	const currentLang = "es";
	
	const posts = await getCollection("blog", ({ data }) => {
		return !data.draft && data.publishDate < new Date();
	});
	
	// Filter posts for current language
	const localizedPosts = posts.filter((page) => {
		const [lang, ...slug] = page.slug.split("/");
		return lang === currentLang;
	});
	
	const tags = new Set();
	localizedPosts.map((post) => {
		Array.isArray(post.data.tags) &&
			post.data.tags.map((tag) => tags.add(tag.toLowerCase()));
	});
	
	return Array.from(tags).map((tag) => {
		return {
			params: { tag: tag },
			props: {
				posts: localizedPosts.filter(
					(post) =>
						Array.isArray(post.data.tags) &&
						post.data.tags.find((elem) => elem.toLowerCase() === tag),
				),
				tag: tag,
			},
		};
	});
}

// Get the post directly from the prop on render
const { posts, tag } = Astro.props;

// Get current language for component rendering
const currentLang = getCurrentLanguage(Astro.url);

const pageTitle = `${t("mics.tag_title1", currentLang)} ${tag} ${t("mics.tag_title2", currentLang)}`;
---

<Layout title={pageTitle}>
	<Container>
		<Sectionhead>
			<Fragment slot="title">{pageTitle}</Fragment>
            <Fragment slot="desc">
                {`${t("mics.tag_desc", currentLang)} ${tag} ${t("mics.tag_desc2", currentLang)}`}
            </Fragment>
		</Sectionhead>
		<Posts posts={posts} />
	</Container>
</Layout>